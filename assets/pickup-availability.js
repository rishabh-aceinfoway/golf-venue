class PickupAvailability extends HTMLElement{connectedCallback(){this.hasAttribute("available")&&(this.errorHtml=this.querySelector("template").content.firstElementChild.cloneNode(!0),this.onClickRefreshList=this.onClickRefreshList.bind(this),this.fetchAvailability(this.dataset.variantId))}fetchAvailability(e){let{rootUrl:t}=this.dataset;t.endsWith("/")||(t+="/");fetch(`${t}variants/${e}/?section_id=store-availability`).then((e=>e.text())).then((e=>{const t=(new DOMParser).parseFromString(e,"text/html").querySelector(".store-availability-container");this.renderPreview(t)})).catch((()=>{const e=this.querySelector("button");e&&e.removeEventListener("click",this.onClickRefreshList),this.renderError()}))}onClickRefreshList(){this.fetchAvailability(this.dataset.variantId)}renderError(){this.innerHTML="",this.appendChild(this.errorHtml),this.querySelector("button").addEventListener("click",this.onClickRefreshList)}renderPreview(e){const t=document.getElementById("modal-store-availability");if(t&&t.remove(),!e.querySelector("pickup-availability-preview"))return this.innerHTML="",void this.removeAttribute("available");this.innerHTML=e.querySelector("pickup-availability-preview").outerHTML,this.setAttribute("available",""),document.body.appendChild(e.querySelector(".modal--store-availability"))}}customElements.define("pickup-availability",PickupAvailability);
//# sourceMappingURL=pickup-availability.js.map
