{% if section.index > 2 or section.location == 'footer' %}
  <link
    rel="stylesheet"
    href="{{ 'section-multi-column.css' | asset_url }}"
    media="print"
    onload="this.media='all'"
  >
  <noscript>
    {{ 'section-multi-column.css' | asset_url | stylesheet_tag }}
  </noscript>
  {%- if section.settings.mobile_carousel -%}
    <link
      rel="stylesheet"
      href="{{ 'component-items-scroll.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
    <link
      rel="stylesheet"
      href="{{ 'theme-component-items-scroll-paged-navigation.css' | asset_url }}"
      media="print"
      onload="this.media='all'"
    >
    <noscript>
      {{ 'component-items-scroll.css' | asset_url | stylesheet_tag }}
      {{ 'theme-component-items-scroll-paged-navigation.css' | asset_url | stylesheet_tag }}
    </noscript>
  {%- endif -%}
{% else %}
  {{ 'section-multi-column.css' | asset_url | stylesheet_tag }}
  {%- if section.settings.mobile_carousel -%}
    {{ 'component-items-scroll.css' | asset_url | stylesheet_tag }}
    {{ 'theme-component-items-scroll-paged-navigation.css' | asset_url | stylesheet_tag }}
  {%- endif -%}
{% endif %}
{%- liquid
  if section.settings.bg_color.alpha == 0 or section.settings.bg_color == settings.color_bg
    assign section_bg = false
  else
    assign section_bg = true
  endif

  if section.settings.section_bottom_margin
    assign margin_class = 'section--mb-0'
  else
    if section_bg == false and section.settings.section_link_link == blank
      assign margin_class = 'section--mb-m'
    endif
  endif

  if section.settings.color_text.alpha > 0
    assign color_text = section.settings.color_text
  else
    assign color_text = settings.color_text
  endif

  assign grid = section.settings.grid
  assign grid_mobile = section.settings.grid_mobile | plus: 0

  if section.settings.enable_carousel_mobile
    assign mobile_sizes = 'calc((100vw - 96px) / ' | append: grid_mobile | append: ')'
  else
    assign mobile_sizes = 'calc((100vw - 36px) / ' | append: grid_mobile | append: ')'
  endif

  assign gap = section.settings.spacing
  case gap
    when 1
      assign gap = '12px'
    when 2
      assign gap = '24px'
    when 3
      assign gap = '30px'
    when 4
      assign gap = '48px'
    when 5
      assign gap = '60px'
  endcase

  assign grid_tablet = section.settings.grid
  if section.settings.grid > 3
    assign grid_tablet = 3
  endif
  case section.settings.container
    when 'small'
      assign sizes = '(min-width: 980px) calc((980px - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
    when 'large'
      assign sizes = '(min-width: 1400px) calc((1400px - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 980px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
      if section.settings.grid == 4
        assign sizes = '(min-width: 1400px) calc((1400px - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((740px - 36px - ' | append: gap | append: ') / 2), ' | append: mobile_sizes
      elsif section.settings.grid > 4
        assign sizes = '(min-width: 1400px) calc((1400px - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 980px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
      endif
    when 'full'
      assign sizes = '(min-width: 1080px) calc((100vw - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 980px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
      if section.settings.grid == 4
        assign sizes = '(min-width: 980px) calc((100vw - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((740px - 36px - ' | append: gap | append: ') / 2), ' | append: mobile_sizes
      elsif section.settings.grid == 5
        assign sizes = '(min-width: 980px) calc((100vw - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((100vw - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
      elsif section.settings.grid == 6
        assign sizes = '(min-width: 1080px) calc((100vw - 60px - ' | append: gap | append: ' * (' | append: grid | append: ' - 1)) / ' | append: grid | append: '), (min-width: 767px) calc((740px - 36px - ' | append: gap | append: ' * (' | append: grid_tablet | append: ' - 1)) / ' | append: grid_tablet | append: '), ' | append: mobile_sizes
      endif
  endcase

  assign text_color_brightness = color_text | color_brightness

  assign button_color = 'initial'
  assign button_hover_color = 'initial'
  assign button_background_color = 'initial'
  assign button_hover_background_color = 'initial'
  if section.settings.block_link_style == 'body' or section.settings.block_link_style == 'chevron'
    assign button_color = color_text
  elsif section.settings.block_link_style == 'hollow'
    assign button_color = color_text
    if text_color_brightness > 125
      assign text_contrast_color = '#000'
    else
      assign text_contrast_color = '#fff'
    endif
    assign button_hover_color = text_contrast_color
    assign button_hover_background_color = color_text
  elsif section.settings.block_link_style == 'mono'
    assign button_background_color = color_text
    if text_color_brightness < 125
      assign button_color = 'white'
      assign button_hover_color = 'white'
      assign button_hover_background_color = button_background_color | color_lighten: 10
    else
      assign button_color = 'black'
      assign button_hover_color = 'black'
      assign button_hover_background_color = button_background_color | color_darken: 10
    endif
  endif
-%}

<section
  class="
    section
    section--multi-column
    section--{{ section.id }}
    {{ margin_class }}
    {% if section_bg %}section--has-bg{% else %}section--no-bg{% endif %}
    {% if section.settings.divider_top %}
      section-divider--top section-divider--top-p
    {% endif %}
    {% if section.settings.divider_bottom %}
      section-divider--bottom section-divider--bottom-p
    {% endif %}
  "
  data-section-id="{{ section.id }}"
  data-section-type="multi-column"
  style="
    --color-text: {{ color_text }};
    --color-heading: {% if section.settings.text_heading_color %}{{ settings.color_headings }}{% else %}{{ color_text }}{% endif %};
    --background-color: {{ section.settings.bg_color }};
    --image-size: {{ section.settings.image_size }}%;
    --image-padding: {{ section.settings.image_padding | times: 2 }}%;
    --image-background-color: {{ section.settings.color_image }};
    {% unless section.settings.text_border_color -%}
      --color--title-border: {{ color_text }};
    {%- endunless %}
    --button-color: {{ button_color }};
    --button-hover-color: {{ button_hover_color }};
    --button-background-color: {{ button_background_color }};
    --button-hover-background-color: {{ button_hover_background_color }};
  "
>
  <div
    class="section__content section__content--padded"
    style="
      --space-top: {{ section.settings.padding_top }}px;
      --space-bottom: {{ section.settings.padding_bottom }}px
    "
  >
    <div class="multi-column__wrapper multi-column__wrapper--image">
      {%- if section.settings.title != blank or section.settings.desc != blank -%}
        <div class="container container--{{ section.settings.container }}{% if section.settings.grid > 3 %} container--tiny@tab{% endif %}{% if section.settings.grid == 6 %} container--tiny@desk{% endif %}">
          <div
            class="
              section__title
              js-animate-single
              {% if section.settings.heading_alignment == 'center' %}section__title--center{% endif %}
              {% unless section.settings.desc == blank %} section__title--desc{% endunless %}
            "
            data-animation-displacement="5"
          >
            {%- unless section.settings.title == blank -%}
              <h2 class="section__title-text">{{ section.settings.title | escape }}</h2>
            {%- endunless -%}
            {%- unless section.settings.desc == blank -%}
              <div
                class="section__title-desc rte js-animate-single"
                data-animation-displacement="0"
                data-animation-delay="0.1"
              >
                {{ section.settings.desc }}
              </div>
            {%- endunless -%}
          </div>
        </div>
      {%- endif -%}
      <div class="container container--{{ section.settings.container }}{% if section.settings.grid > 3 %} container--tiny@tab{% endif %}{% if section.settings.grid == 6 %} container--tiny@desk{% endif %}{% if section.settings.mobile_carousel %} container--mob-0{% endif %}">
        {%- liquid
          comment
            Items scroll logic
          endcomment
          assign grid_tag = 'div'
          assign grid_tag_attributes = ''
          assign classes = ''
          if section.settings.mobile_carousel
            assign grid_tag = 'items-scroll-paged-navigation'
            assign classes = 'items-scroll ratio-navigation'
            comment
              Can choose from 'mob', 'phab', 'tab', 'desk'
              Widths need to be in sync with the ones in items-scroll.js
            endcomment
            assign breakpoint = 'tab'
            assign grid_tag_attributes = 'breakpoint-max="' | append: breakpoint | append: '"'
            assign mq_bound = 'max'
            assign mq_adjustment = 0
          endif
        -%}

        {%- if grid_tag == 'items-scroll-paged-navigation' -%}
          {%- capture selector -%}
          .section--{{ section.id }} [data-items] {
            display: flex;
            flex-wrap: nowrap;
            width: 100%;
            overflow-x: hidden;
          }

          .section--{{ section.id }} [data-items] > * {
            flex-shrink: 0;
            flex-grow: 0;
          }
        {%- endcapture -%}
          <style>
            {%- if mq_bound -%}
              {%- case breakpoint -%}
                {%- when 'mob' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 480 | plus: mq_adjustment }}px) {
                    {{ selector }}
                  }
                {%- when 'phab' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 560 | plus: mq_adjustment }}px) {
                    {{ selector }}
                  }
                {%- when 'tab' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 768 | plus: mq_adjustment }}px) {
                    {{ selector }}
                  }
                {%- when 'desk' -%}
                  @media screen and ({{ mq_bound }}-width: {{ 980 | plus: mq_adjustment }}px) {
                    {{ selector }}
                  }
              {%- endcase -%}
            {%- else -%}
              {{ selector }}
            {%- endif -%}
          </style>
        {%- endif -%}

        {%- liquid
          case section.settings.spacing
            when 1
              assign spacing_px = 12
            when 2
              assign spacing_px = 24
            when 3
              assign spacing_px = 30
            when 4
              assign spacing_px = 48
            when 5
              assign spacing_px = 60
          endcase

          assign gain_fraction = section.settings.heading_size | times: 0.15
        -%}
        <div
          class="multi-column multi-column--image"
          style="
            --heading-font-size: {{ section.settings.heading_size | times: 0.2 | times: gain_fraction | plus: 1 }}rem;
            --heading-font-size-mobile: {{ section.settings.heading_size | times: 0.2 | times: gain_fraction | plus: 0.95 }}rem;
            --heading-line-height: {{ section.settings.heading_size | times: 0.07 | minus: 1.85 | abs }};
            --heading-line-height-mobile: {{ section.settings.heading_size | times: 0.07 | minus: 1.7 | abs }};
          "
        >
          <div class="multi-column__items">
            <{{ grid_tag }}
              class="{{ classes }}"
              {% if breakpoint %}
                items-overflow-max="{{ breakpoint }}"
              {% endif %}
              {{ grid_tag_attributes }}
              image-container-ratio="natural"
            >
              <div
                class="
                  grid-layout
                  grid-layout--{{ section.settings.grid }}
                  grid-layout--{{ section.settings.grid_mobile }}@mob
                  grid-spacing--{{ spacing_px }}
                  {% if grid_mobile > section.blocks.count %}
                  grid-layout--align-center
                  {% endif %}
                  grid-layout--align-center@phab
                  js-animate-sequence
                "
                data-items
              >
                {% for block in section.blocks %}
                  <div class="multi-column__item multi-column__item--{{ section.settings.alignment }}">
                    {% if block.settings.link != blank and section.settings.block_link_style == 'column' %}
                      <a href="{{ block.settings.link }}" class="multi-column__column-link">
                    {% endif %}

                    {% if section.settings.image_toggle == true %}
                      <div class="multi-column__media">
                        {% if block.type == 'image' %}
                          <div
                            class="o-ratio o-ratio--{{ section.settings.image_ratio }}"
                            {% if block.settings.image == null and section.settings.image_ratio == 'natural' %}
                              style="padding-bottom:100%;"
                            {% elsif block.settings.image != null and section.settings.image_ratio == 'natural' %}
                              style="padding-bottom:{{ 1 | divided_by: block.settings.image.aspect_ratio | times: section.settings.image_size }}%;"
                            {% endif %}
                          >
                            <div class="o-ratio__content">
                              {% unless block.settings.image == blank %}
                                {%- liquid
                                  assign loading = 'lazy'
                                  if section.location == 'template' and section.index == 1 and forloop.index <= 3
                                    assign loading = 'eager'
                                  endif

                                  assign additional_classes = 'multi-column__media-img'
                                  if section.settings.image_fit
                                    assign additional_classes = additional_classes | append: ' multi-column__media-img--fit'
                                  else
                                    assign additional_classes = additional_classes | append: ' multi-column__media-img--crop'
                                  endif
                                -%}
                                {% render 'image',
                                  image: block.settings.image,
                                  alt_string: block.settings.image.alt,
                                  additional_classes: additional_classes,
                                  image_ratio: 'natural',
                                  image_fit: section.settings.image_fit,
                                  image_srcset_widths: '360, 540, 720, 900, 1080, 1296, 1512, 1728, 2048',
                                  image_sizes: sizes,
                                  render_skeleton: true,
                                  loading: loading
                                %}
                              {% else %}
                                {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--light' }}
                              {% endunless %}
                            </div>
                          </div>
                        {% elsif block.type == 'video' %}
                          <div
                            class="o-ratio o-ratio--{{ section.settings.image_ratio }}"
                            {% if block.settings.video == null and section.settings.image_ratio == 'natural' %}
                              style="padding-bottom:100%;"
                            {% elsif block.settings.video != null and section.settings.image_ratio == 'natural' %}
                              style="padding-bottom:{{ 1 | divided_by: block.settings.video.aspect_ratio | times: section.settings.image_size }}%;"
                            {% endif %}
                          >
                            <div class="o-ratio__content">
                              {% if block.settings.video %}
                                {% capture video_class %}multi-column__media-video multi-column__media-video--{% if section.settings.image_fit %}fit{% else %}crop{% endif %}{% endcapture %}
                                {% render 'lazy-video', video: block.settings.video, class: video_class %}
                              {% else %}
                                {{ 'image' | placeholder_svg_tag: 'placeholder-svg placeholder-svg--light' }}
                              {% endif %}
                            </div>
                          </div>
                        {% endif %}
                      </div>
                    {% endif %}

                    <div class="multi-column__text{% if block.settings.image == blank %} multi-column__text--full{% endif %}">
                      {% unless block.settings.title == blank %}
                        <h3 class="multi-column__title">{{ block.settings.title | escape }}</h3>
                      {% endunless %}
                      {% unless block.settings.sub_title == blank %}
                        <h4 class="multi-column__sub-title h5">{{ block.settings.sub_title | escape }}</h4>
                      {% endunless %}
                      {% unless block.settings.desc == blank %}
                        <div class="multi-column__desc">
                          <div class="rte">{{ block.settings.desc }}</div>
                        </div>
                      {% endunless %}

                      {% unless block.settings.link_title == blank or section.settings.block_link_style == 'column' %}
                        <div class="multi-column__button">
                          <a
                            href="{{ block.settings.link }}"
                            class="{% if section.settings.block_link_style == "hollow" or section.settings.block_link_style == "mono" or section.settings.block_link_style == "primary" %} c-btn c-btn--{{ section.settings.block_link_style }}{% elsif section.settings.block_link_style == "chevron" %} link link--arrow{% else %} link--underline{% endif %}"
                          >
                            {{- block.settings.link_title -}}
                            {%- if section.settings.block_link_style == 'chevron' -%}
                              {% render 'icons-theme', icon: 'chevron' %}
                            {%- endif -%}
                          </a>
                        </div>
                      {% endunless %}
                    </div>
                    {% if block.settings.link != blank and section.settings.block_link_style == 'column' %}
                      </a>
                    {% endif %}
                  </div>
                {% endfor %}
              </div>
            </{{ grid_tag }}>
          </div>
        </div>

        {% unless section.settings.mobile_carousel %}
          {% assign secion_link_mobile_classes = 'section__link--mt0@mob' %}
        {% endunless %}
        {% capture secion_link_classes %}
          section__link--mt0@desk {{ secion_link_mobile_classes }}
        {% endcapture %}
        {% render 'section-link',
          title: section.settings.section_link_title,
          link: section.settings.section_link_link,
          style: section.settings.section_link_style,
          color_text: color_text,
          additional_classes: secion_link_classes
        %}
      </div>
    </div>
  </div>
  {%- if section.settings.mobile_carousel or request.design_mode -%}
    <script src="{{ 'items-scroll-paged-navigation.js' | asset_url }}" type="module"></script>
  {%- endif -%}
</section>

{% if section.blocks.size == 0 %}
  <div class="placeholder-noblocks">
    {{ 'homepage.onboarding.no_content' | t }}
  </div>
{% endif %}

{% schema %}
{
  "name": "Multicolumn with images",
  "class": "js-section__multi-column-images",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Multicolumn with images"
    },
    {
      "type": "richtext",
      "id": "desc",
      "label": "Text"
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "checkbox",
      "id": "image_toggle",
      "label": "Show image",
      "default": true
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Image ratio",
      "default": "4:3",
      "options": [
        {
          "value": "1:1",
          "label": "Square (1:1)"
        },
        {
          "value": "3:4",
          "label": "Portrait (3:4)"
        },
        {
          "value": "4:3",
          "label": "Landscape (4:3)"
        },
        {
          "value": "16:9",
          "label": "Wide (16:9)"
        },
        {
          "value": "2:3",
          "label": "Tall (2:3)"
        },
        {
          "value": "natural",
          "label": "Natural"
        },
        {
          "value": "circle",
          "label": "Circle"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "image_fit",
      "label": "Fit image to container",
      "default": false
    },
    {
      "type": "range",
      "id": "image_size",
      "label": "Size",
      "unit": "%",
      "min": 20,
      "max": 100,
      "step": 1,
      "default": 100
    },
    {
      "type": "range",
      "id": "image_padding",
      "label": "Padding",
      "min": 0,
      "max": 5,
      "step": 1,
      "default": 0
    },
    {
      "type": "header",
      "content": "Position"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Section heading and text",
      "default": "center",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        }
      ]
    },
    {
      "type": "select",
      "id": "alignment",
      "label": "Content",
      "default": "center",
      "options": [
        {
          "label": "Left",
          "value": "left"
        },
        {
          "label": "Center",
          "value": "center"
        },
        {
          "label": "Right",
          "value": "right"
        }
      ]
    },
    {
      "type": "header",
      "content": "Width"
    },
    {
      "type": "select",
      "id": "container",
      "label": "Section width",
      "default": "large",
      "options": [
        {
          "label": "Default",
          "value": "large"
        },
        {
          "label": "Narrow",
          "value": "small"
        },
        {
          "label": "Wide",
          "value": "full"
        }
      ]
    },
    {
      "type": "header",
      "content": "Desktop layout"
    },
    {
      "type": "range",
      "id": "grid",
      "label": "Items per row",
      "min": 2,
      "max": 6,
      "step": 1,
      "default": 3
    },
    {
      "type": "range",
      "id": "spacing",
      "label": "Spacing",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "header",
      "content": "Mobile layout"
    },
    {
      "type": "select",
      "id": "grid_mobile",
      "label": "Items per row",
      "default": "1",
      "options": [
        {
          "label": "1",
          "value": "1"
        },
        {
          "label": "2",
          "value": "2"
        }
      ]
    },
    {
      "type": "checkbox",
      "id": "mobile_carousel",
      "label": "Enable carousel",
      "default": true
    },
    {
      "type": "header",
      "content": "Colors and borders"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "color_image",
      "label": "Image background",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "Text",
      "default": "rgba(0,0,0,0)"
    },
    {
      "type": "checkbox",
      "id": "text_heading_color",
      "label": "Use default heading color",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "text_border_color",
      "label": "Use default brand border color",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "divider_top",
      "label": "Show top border",
      "default": false
    },
    {
      "type": "checkbox",
      "id": "divider_bottom",
      "label": "Show bottom border",
      "default": false
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "label": "Heading size",
      "min": 1,
      "max": 5,
      "step": 1,
      "default": 3
    },
    {
      "type": "header",
      "content": "Block buttons"
    },
    {
      "type": "select",
      "id": "block_link_style",
      "label": "Style",
      "default": "hollow",
      "options": [
        {
          "value": "column",
          "label": "Column"
        },
        {
          "value": "primary",
          "label": "Brand button"
        },
        {
          "value": "mono",
          "label": "Mono button"
        },
        {
          "value": "hollow",
          "label": "Outline button"
        },
        {
          "value": "chevron",
          "label": "Chevron"
        },
        {
          "value": "body",
          "label": "Body text"
        }
      ]
    },
    {
      "type": "header",
      "content": "Section button"
    },
    {
      "type": "text",
      "id": "section_link_title",
      "label": "Label",
      "default": "View all"
    },
    {
      "type": "url",
      "id": "section_link_link",
      "label": "Link"
    },
    {
      "type": "select",
      "id": "section_link_style",
      "label": "Style",
      "default": "link link--arrow",
      "options": [
        {
          "value": "c-btn c-btn--primary",
          "label": "Brand button"
        },
        {
          "value": "c-btn c-btn--mono",
          "label": "Mono button"
        },
        {
          "value": "c-btn c-btn--hollow",
          "label": "Outline button"
        },
        {
          "value": "link link--arrow",
          "label": "Chevron"
        },
        {
          "value": "link--underline",
          "label": "Body text"
        }
      ]
    },
    {
      "type": "header",
      "content": "Padding and margin"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Top padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Bottom padding",
      "unit": "px",
      "min": 0,
      "max": 120,
      "step": 3,
      "default": 0
    },
    {
      "type": "checkbox",
      "id": "section_bottom_margin",
      "label": "Reduce bottom margin",
      "default": false
    }
  ],
  "blocks": [
    {
      "type": "image",
      "name": "Column with image",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Column heading"
        },
        {
          "type": "text",
          "id": "sub_title",
          "label": "Subheading"
        },
        {
          "type": "richtext",
          "id": "desc",
          "label": "Text",
          "default": "<p>Describe the main features of your brand or products using a few lines of text along with images or icons.</p>"
        },
        {
          "type": "text",
          "id": "link_title",
          "label": "Button label",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Button link"
        }
      ]
    },
    {
      "type": "video",
      "name": "Column with video",
      "settings": [
        {
          "type": "video",
          "id": "video",
          "label": "Video",
          "info": "Background videos are looped with muted sound."
        },
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Column heading"
        },
        {
          "type": "text",
          "id": "sub_title",
          "label": "Subheading"
        },
        {
          "type": "richtext",
          "id": "desc",
          "label": "Text",
          "default": "<p>Describe the main features of your brand or products using a few lines of text along with images or icons.</p>"
        },
        {
          "type": "text",
          "id": "link_title",
          "label": "Button label",
          "default": "Learn more"
        },
        {
          "type": "url",
          "id": "link",
          "label": "Button link"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Multicolumn with images",
      "blocks": [
        {
          "type": "image"
        },
        {
          "type": "image"
        },
        {
          "type": "image"
        }
      ]
    }
  ],
  "enabled_on": {
    "templates": ["*"],
    "groups": ["header", "footer"]
  }
}
{% endschema %}
